/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { UTIL, UTILInterface } from "../UTIL";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_ownerAddress",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_contractsAdress",
        type: "address[]",
      },
    ],
    name: "getBalances",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "decimals",
            type: "uint8",
          },
        ],
        internalType: "struct UTIL.ERC20Infos[]",
        name: "infos",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610a95806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80636a385ae914610030575b600080fd5b61004a60048036038101906100459190610594565b610060565b60405161005791906107d0565b60405180910390f35b6060815167ffffffffffffffff81111561007d5761007c610451565b5b6040519080825280602002602001820160405280156100b657816020015b6100a361039e565b81526020019060019003908161009b5790505b50905060005b82518167ffffffffffffffff161015610397576000838267ffffffffffffffff16815181106100ee576100ed6107f2565b5b602002602001015190508073ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015610143573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061016c91906108c7565b838367ffffffffffffffff1681518110610189576101886107f2565b5b6020026020010151600001819052508073ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa1580156101e3573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061020c91906108c7565b838367ffffffffffffffff1681518110610229576102286107f2565b5b6020026020010151602001819052508073ffffffffffffffffffffffffffffffffffffffff166370a08231866040518263ffffffff1660e01b8152600401610271919061091f565b602060405180830381865afa15801561028e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b29190610966565b838367ffffffffffffffff16815181106102cf576102ce6107f2565b5b602002602001015160400181815250508073ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561032a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034e91906109bf565b838367ffffffffffffffff168151811061036b5761036a6107f2565b5b60200260200101516060019060ff16908160ff168152505050808061038f90610a2f565b9150506100bc565b5092915050565b6040518060800160405280606081526020016060815260200160008152602001600060ff1681525090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610408826103dd565b9050919050565b610418816103fd565b811461042357600080fd5b50565b6000813590506104358161040f565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61048982610440565b810181811067ffffffffffffffff821117156104a8576104a7610451565b5b80604052505050565b60006104bb6103c9565b90506104c78282610480565b919050565b600067ffffffffffffffff8211156104e7576104e6610451565b5b602082029050602081019050919050565b600080fd5b600061051061050b846104cc565b6104b1565b90508083825260208201905060208402830185811115610533576105326104f8565b5b835b8181101561055c57806105488882610426565b845260208401935050602081019050610535565b5050509392505050565b600082601f83011261057b5761057a61043b565b5b813561058b8482602086016104fd565b91505092915050565b600080604083850312156105ab576105aa6103d3565b5b60006105b985828601610426565b925050602083013567ffffffffffffffff8111156105da576105d96103d8565b5b6105e685828601610566565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561065657808201518184015260208101905061063b565b60008484015250505050565b600061066d8261061c565b6106778185610627565b9350610687818560208601610638565b61069081610440565b840191505092915050565b6000819050919050565b6106ae8161069b565b82525050565b600060ff82169050919050565b6106ca816106b4565b82525050565b600060808301600083015184820360008601526106ed8282610662565b915050602083015184820360208601526107078282610662565b915050604083015161071c60408601826106a5565b50606083015161072f60608601826106c1565b508091505092915050565b600061074683836106d0565b905092915050565b6000602082019050919050565b6000610766826105f0565b61077081856105fb565b9350836020820285016107828561060c565b8060005b858110156107be578484038952815161079f858261073a565b94506107aa8361074e565b925060208a01995050600181019050610786565b50829750879550505050505092915050565b600060208201905081810360008301526107ea818461075b565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600067ffffffffffffffff82111561084157610840610451565b5b61084a82610440565b9050602081019050919050565b600061086a61086584610826565b6104b1565b90508281526020810184848401111561088657610885610821565b5b610891848285610638565b509392505050565b600082601f8301126108ae576108ad61043b565b5b81516108be848260208601610857565b91505092915050565b6000602082840312156108dd576108dc6103d3565b5b600082015167ffffffffffffffff8111156108fb576108fa6103d8565b5b61090784828501610899565b91505092915050565b610919816103fd565b82525050565b60006020820190506109346000830184610910565b92915050565b6109438161069b565b811461094e57600080fd5b50565b6000815190506109608161093a565b92915050565b60006020828403121561097c5761097b6103d3565b5b600061098a84828501610951565b91505092915050565b61099c816106b4565b81146109a757600080fd5b50565b6000815190506109b981610993565b92915050565b6000602082840312156109d5576109d46103d3565b5b60006109e3848285016109aa565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600067ffffffffffffffff82169050919050565b6000610a3a82610a1b565b915067ffffffffffffffff8203610a5457610a536109ec565b5b60018201905091905056fea2646970667358221220068034c489ca00e8d1f17b47916f1924b460dbed9b162829267e346047937f7d64736f6c63430008100033";

export class UTIL__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UTIL> {
    return super.deploy(overrides || {}) as Promise<UTIL>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): UTIL {
    return super.attach(address) as UTIL;
  }
  connect(signer: Signer): UTIL__factory {
    return super.connect(signer) as UTIL__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UTILInterface {
    return new utils.Interface(_abi) as UTILInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): UTIL {
    return new Contract(address, _abi, signerOrProvider) as UTIL;
  }
}
