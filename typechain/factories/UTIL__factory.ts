/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { UTIL, UTILInterface } from "../UTIL";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_ownerAddress",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_contractsAdress",
        type: "address[]",
      },
    ],
    name: "getBalances",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "decimals",
            type: "uint8",
          },
        ],
        internalType: "struct UTIL.ERC20Infos[]",
        name: "infos",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_ownerAddress",
        type: "address",
      },
    ],
    name: "getValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b7a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80633ccc05221461003b5780636a385ae91461006b575b600080fd5b610055600480360381019061005091906104c9565b61009b565b604051610062919061050f565b60405180910390f35b61008560048036038101906100809190610683565b6100ee565b60405161009291906108b5565b60405180910390f35b60006100a561042c565b6040518060400160405280600781526020017f746573743132330000000000000000000000000000000000000000000000000081525081600001819052506104d2915050919050565b6060815167ffffffffffffffff81111561010b5761010a610540565b5b60405190808252806020026020018201604052801561014457816020015b61013161042c565b8152602001906001900390816101295790505b50905060005b82518167ffffffffffffffff161015610425576000838267ffffffffffffffff168151811061017c5761017b6108d7565b5b602002602001015190508073ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa1580156101d1573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906101fa91906109ac565b838367ffffffffffffffff1681518110610217576102166108d7565b5b6020026020010151600001819052508073ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610271573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061029a91906109ac565b838367ffffffffffffffff16815181106102b7576102b66108d7565b5b6020026020010151602001819052508073ffffffffffffffffffffffffffffffffffffffff166370a08231866040518263ffffffff1660e01b81526004016102ff9190610a04565b602060405180830381865afa15801561031c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103409190610a4b565b838367ffffffffffffffff168151811061035d5761035c6108d7565b5b602002602001015160400181815250508073ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103dc9190610aa4565b838367ffffffffffffffff16815181106103f9576103f86108d7565b5b60200260200101516060019060ff16908160ff168152505050808061041d90610b14565b91505061014a565b5092915050565b6040518060800160405280606081526020016060815260200160008152602001600060ff1681525090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104968261046b565b9050919050565b6104a68161048b565b81146104b157600080fd5b50565b6000813590506104c38161049d565b92915050565b6000602082840312156104df576104de610461565b5b60006104ed848285016104b4565b91505092915050565b6000819050919050565b610509816104f6565b82525050565b60006020820190506105246000830184610500565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6105788261052f565b810181811067ffffffffffffffff8211171561059757610596610540565b5b80604052505050565b60006105aa610457565b90506105b6828261056f565b919050565b600067ffffffffffffffff8211156105d6576105d5610540565b5b602082029050602081019050919050565b600080fd5b60006105ff6105fa846105bb565b6105a0565b90508083825260208201905060208402830185811115610622576106216105e7565b5b835b8181101561064b578061063788826104b4565b845260208401935050602081019050610624565b5050509392505050565b600082601f83011261066a5761066961052a565b5b813561067a8482602086016105ec565b91505092915050565b6000806040838503121561069a57610699610461565b5b60006106a8858286016104b4565b925050602083013567ffffffffffffffff8111156106c9576106c8610466565b5b6106d585828601610655565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561074557808201518184015260208101905061072a565b60008484015250505050565b600061075c8261070b565b6107668185610716565b9350610776818560208601610727565b61077f8161052f565b840191505092915050565b610793816104f6565b82525050565b600060ff82169050919050565b6107af81610799565b82525050565b600060808301600083015184820360008601526107d28282610751565b915050602083015184820360208601526107ec8282610751565b9150506040830151610801604086018261078a565b50606083015161081460608601826107a6565b508091505092915050565b600061082b83836107b5565b905092915050565b6000602082019050919050565b600061084b826106df565b61085581856106ea565b935083602082028501610867856106fb565b8060005b858110156108a35784840389528151610884858261081f565b945061088f83610833565b925060208a0199505060018101905061086b565b50829750879550505050505092915050565b600060208201905081810360008301526108cf8184610840565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600067ffffffffffffffff82111561092657610925610540565b5b61092f8261052f565b9050602081019050919050565b600061094f61094a8461090b565b6105a0565b90508281526020810184848401111561096b5761096a610906565b5b610976848285610727565b509392505050565b600082601f8301126109935761099261052a565b5b81516109a384826020860161093c565b91505092915050565b6000602082840312156109c2576109c1610461565b5b600082015167ffffffffffffffff8111156109e0576109df610466565b5b6109ec8482850161097e565b91505092915050565b6109fe8161048b565b82525050565b6000602082019050610a1960008301846109f5565b92915050565b610a28816104f6565b8114610a3357600080fd5b50565b600081519050610a4581610a1f565b92915050565b600060208284031215610a6157610a60610461565b5b6000610a6f84828501610a36565b91505092915050565b610a8181610799565b8114610a8c57600080fd5b50565b600081519050610a9e81610a78565b92915050565b600060208284031215610aba57610ab9610461565b5b6000610ac884828501610a8f565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600067ffffffffffffffff82169050919050565b6000610b1f82610b00565b915067ffffffffffffffff8203610b3957610b38610ad1565b5b60018201905091905056fea2646970667358221220033c495f812179d2180d7514b6b36d57733da658a6600add05fe335103c7107164736f6c63430008100033";

export class UTIL__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UTIL> {
    return super.deploy(overrides || {}) as Promise<UTIL>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): UTIL {
    return super.attach(address) as UTIL;
  }
  connect(signer: Signer): UTIL__factory {
    return super.connect(signer) as UTIL__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UTILInterface {
    return new utils.Interface(_abi) as UTILInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): UTIL {
    return new Contract(address, _abi, signerOrProvider) as UTIL;
  }
}
